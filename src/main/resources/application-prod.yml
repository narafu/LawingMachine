# prod: 운영 환경용 프로필 (실행 시 DB 스키마와 데이터가 모두 초기화됩니다)

spring:
  config:
    activate:
      on-profile: prod

  servlet:
    multipart:
      location: /tmp # 업로드된 파일의 임시 저장 공간 (Render.com 권장)
      max-file-size: 100MB
      max-request-size: 100MB

  # 데이터베이스 연결 설정
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  # 데이터베이스 초기화 설정
  sql:
    init:
      # 애플리케이션 시작 시 항상 스크립트를 실행하여 DB를 초기화합니다.
      mode: always
      # 1. 스키마(DDL) 스크립트 위치 지정
      schema-locations: classpath:db/schema.sql
      # 2. 데이터(DML) 스크립트 위치 지정
      data-locations: classpath:db/data-postgresql.sql
      encoding: UTF-8

  # JPA 및 Hibernate 설정
  jpa:
    hibernate:
      # 스키마 관리는 schema.sql에서 하므로, JPA는 스키마를 건드리지 않도록 'none'으로 설정합니다.
      ddl-auto: none
    properties:
      hibernate:
        # PostgreSQL 방언(Dialect)을 명시적으로 설정합니다.
        dialect: org.hibernate.dialect.PostgreSQLDialect
        # 콘솔에 출력되는 SQL을 보기 좋게 포맷팅합니다.
        format_sql: true
    # ddl-auto가 none이므로 스키마 자동 생성 기능을 비활성화합니다.
    generate-ddl: false
    show-sql: true

  # Spring Security OAuth2 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_SECRET}
            scope: profile, email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_SECRET}
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2.0/code/naver"
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_SECRET}
            client-name: kakao
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2.0/code/kakao"
            client-authentication-method: POST
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# 로깅 레벨 설정 (문제 진단용)
logging:
  level:
    # SQL 초기화 관련 DEBUG 로그 활성화
    org.springframework.boot.autoconfigure.sql.init: DEBUG
    org.springframework.jdbc.datasource.init: DEBUG
